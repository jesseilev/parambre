{"version":3,"sources":["audioContext.js","utils/index.js","synth.js","actions/index.js","containers/AdjustableBoxFor4Params.js","containers/Visualizer.js","reducers/timbreParams.js","containers/ControlPad.js","containers/ParambreContainer.js","components/App.js","reducers/audioPlayer.js","reducers/frequencyData.js","reducers/index.js","index.js"],"names":["audioContext","window","AudioContext","sine","curve","x","offset","amp","period","phase","Math","sin","PI","range","min","max","rangeDistance","mapBetweenRanges","fromRange","toRange","value","percent","oscWithFluctuatingGain","createNode","_ref","gainValue","gain","pulseFrequency","pulseAmplitiude","rest","Object","objectWithoutProperties","0","1","oscillator","objectSpread","2","key","destination","3","frequency","type","customSynth","_ref2","rootFrequency","toneCount","overtoneAmp","overtoneModulationFreq","overtoneModulationAmp","R","filter","i","reduce","accumulatedOscs","freq","updateGraph","state","newNodes","_state$settings$synth","settings","synth","attack","release","currentTime","audioPlayer","audioGraph","targetGain","isPlaying","rampDuration","targetFinishTime","mostRecentPlayPauseChange","stillRamping","curveType","_state$timbreParams","timbreParams","overtoneAmplitudesCurve","modulationMagnitudesCurve","modulationFrequenciesCurve","genCustom","4","buildAudioNodes","update","boxAdjustment","params","resizeHandleStyles","width","height","background","AdjustableBoxFor4ParamsWithSize","withSize","monitorHeight","props","xParam","yParam","widthParam","heightParam","parentSize","zIndex","paramSetName","boxBeingAdjusted","onDrag","onResize","onBoxAdjustmentStart","onBoxAdjustmentStop","centerX","centerY","react_default","a","createElement","react_rnd_lib","position","y","size","bounds","maxWidth","maxHeight","minWidth","minHeight","style","border","color","opacity","display","alignItems","justifyContent","boxShadow","onDragStart","onDragStop","onResizeStart","onResizeStop","enableResizing","topLeft","topRight","bottomLeft","bottomRight","connect","ownProps","cpsba","currentParamSetBeingAdjusted","dispatch","containerSize","mouseEvent","dragData","compressedDeltaX","deltaX","compressedDeltaY","deltaY","event","directionType","refToElement","delta","widthParamNewValue","clientWidth","heightParamNewValue","clientHeight","boxAdjustmentStart","boxAdjustmentStop","Visualizer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","canvas","React","createRef","ref","_this$props","overtones","colors","current","context","getContext","sliceWidth","length","xPaddingUnits","maxRadius","clearRect","map","overtone","index","overtoneAmplitude","modulationMagnitude","modulationFrequency","lineWidth","strokeStyle","modulationMagnitudes","beginPath","lineHeight","moveTo","lineTo","stroke","fillStyle","overtoneAmplitudes","arc","fill","modulationFrequencies","radius","draw","Component","computeOvertones","ranges","genRandomCurve","mapFrom01To","r","n","randomInRange","random","initialState","arguments","undefined","action","updaterFuncs","lensPath","newState","loop","Cmd","boxArea","computeZIndex","listOfParamsBoxes","paramsBox","indexOf","ControlPadWithSize","overtoneAmplitudesBox","modulationMagnitudesBox","modulationFrequenciesBox","paramsList","borderColor","borderStyle","borderWidth","isAdjustmentHappening","containers_AdjustableBoxFor4Params","makeParams","curveSettings","curveKeyName","ParambreContainerWithSize","containers_Visualizer","left","top","containers_ControlPad","App","containers_ParambreContainer","createVirtualAudioGraph","output","setIsPlaying","newIsPlaying","Uint8Array","frequencyData","TP","AP","FD","chord","enhancer","compose","applyMiddleware","ReduxEmitter","Loop","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","run","updateGaph","combineReducers","comboReducer","render","react_redux_es","components_App","document","getElementById","subscribe","getState"],"mappings":"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","file":"static/js/main.2c7c3b67.chunk.js","sourcesContent":["export default typeof window !== 'undefined' ? new AudioContext : {}","export const sine = (curve, x) => {\n  // debugger;\n  const { offset, amp, period, phase } = curve;\n  return offset + amp * Math.sin( (2 * Math.PI * x / period) + phase );\n};\n\nexport const range = (min, max) => ({ min: min, max: max });\n\nexport const rangeDistance = (range) => (range.max - range.min);\n\nexport const mapBetweenRanges = (fromRange, toRange, value) => {\n  const percent = (value - fromRange.min) / rangeDistance(fromRange);\n  return toRange.min + (percent * rangeDistance(toRange));\n};\n\nexport const clampToRange = (range, value) => (\n  Math.max(range.min, Math.min(range.max, value))\n);","import * as R from 'ramda';\nimport createVirtualAudioGraph, {\n  createNode,\n  createWorkletNode,\n  delay,\n  gain,\n  biquadFilter,\n  bufferSource,\n  oscillator,\n  stereoPanner,\n  analyser,\n  dynamicsCompressor\n} from 'virtual-audio-graph';\nimport audioContext from './audioContext';\nimport {sine} from './utils';\n\n\n\n\n\n\n// CUSTOM GRAPH SECTIONS\n\n\nconst oscWithFluctuatingGain = createNode(({\n  gain: gainValue,\n  pulseFrequency,\n  pulseAmplitiude,\n  ...rest\n}) => {\n  return {\n    0: gain('output', {gain: gainValue}),\n    1: oscillator(0, { ...rest }),\n    2: gain({ key: 0, destination: 'gain'}, { gain: pulseAmplitiude }),\n    3: oscillator(2, { frequency: pulseFrequency, type: 'saw' })\n  }\n})\n\nconst customSynth = createNode(({\n  rootFrequency,\n  toneCount,\n  overtoneAmp,\n  overtoneModulationFreq,\n  overtoneModulationAmp,\n  ...rest\n}) => {\n  const reduceFunc = (accumulatedOscs, i) => {\n    const freq = rootFrequency * i;\n    const amp = overtoneAmp(i, freq) / (i * toneCount);\n    accumulatedOscs[i] = oscWithFluctuatingGain('output', { \n      frequency: freq, \n      gain: amp,\n      pulseFrequency: overtoneModulationFreq(i),\n      pulseAmplitiude: overtoneModulationAmp(i) * amp,\n      ...rest\n    });\n    return accumulatedOscs;\n  }\n  const withinAudibleSpectrum = (i) => i * rootFrequency < 22050;\n  return R.range(1, toneCount + 1)\n    .filter(withinAudibleSpectrum)\n    .reduce(reduceFunc, {});\n});\n\n\n// noise buffer\n// const sampleRate = audioContext.sampleRate;\n// const bufferDuration = 2;\n// const bufferSize = bufferDuration * sampleRate;\n// const buffer = audioContext.createBuffer(bufferDuration, bufferSize, sampleRate);\n// let data = buffer.getChannelData(0);\n// for (let i = 0; i < bufferSize; i++) {\n//   data[i] = Math.random() * 2 - 1;\n// }\n\n// BUILD THE AUDIO GRAPH BASED ON CURRENT STATE\n\nexport const buildAudioNodes = (state) => {\n\n  const { attack, release, toneCount, rootFrequency } = state.settings.synth;\n  const { currentTime } = state.audioPlayer.audioGraph || 0;\n  const targetGain = state.audioPlayer.isPlaying ? 1 : 0;\n  const rampDuration = state.audioPlayer.isPlaying ? attack : release;\n  let targetFinishTime = state.audioPlayer.mostRecentPlayPauseChange + rampDuration;\n  const stillRamping = currentTime < targetFinishTime;\n  const curveType = stillRamping ? 'linearRampToValueAtTime' : 'setValueAtTime';\n  targetFinishTime = stillRamping ? targetFinishTime : currentTime;\n  \n  const {\n    overtoneAmplitudesCurve, \n    modulationMagnitudesCurve, \n    modulationFrequenciesCurve\n  } = state.timbreParams;\n\n  const genCustom = freq => customSynth(0, {\n    rootFrequency: freq,\n    toneCount: state.settings.synth.toneCount,\n    overtoneAmp: i => sine(overtoneAmplitudesCurve, i),\n    overtoneModulationAmp: (i) => sine(modulationMagnitudesCurve, i),\n    overtoneModulationFreq: (i) => 1 + sine(modulationFrequenciesCurve, i) * 16,\n  })\n  return {\n\n\n    0: gain('output', {\n        gain: [ curveType, targetGain, targetFinishTime ]\n    }),\n\n    1: genCustom(rootFrequency * 1),   \n    // 2: genCustom(rootFrequency * 16 / 3),\n    3: genCustom(rootFrequency * 12 / 5),\n    4: genCustom(rootFrequency * 9 / 5),\n    // 5: genCustom(rootFrequency * 7 / 4)\n  };\n};\n\nconst updateGraph = (state) => { \n  const newNodes = buildAudioNodes(state);\n  state.audioPlayer.audioGraph.update(newNodes); \n};\n\nexport default updateGraph;","let nextTodoId = 0\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const togglePlayback = () => ({\n  type: 'TOGGLE_PLAYBACK'\n})\n\nexport const sliderChange = payload => ({\n  type: 'SLIDER_CHANGE',\n  payload\n})\n\nexport const waveChange = (newWave) => ({\n  type: 'WAVE_CHANGE',\n  newWave\n})\n\nexport const boxAdjustment = (params) => ({\n  type: 'BOX_ADJUSTMENT',\n  params\n})\n\nexport const boxAdjustmentStart = (paramSetName) => ({\n  type: 'BOX_ADJUSTMENT_START',\n  paramSetName\n})\n\nexport const boxAdjustmentStop = (paramSetName) => ({\n  type: 'BOX_ADJUSTMENT_STOP',\n  paramSetName\n})\n\nexport const dragDelta = (payload) => ({\n  type: 'DRAG_DELTA',\n  payload\n})\n\nexport const resizeDelta = (payload) => ({\n  type: 'RESIZE_DELTA',\n  payload\n})\n\nexport const setPlayback = (newIsPlaying) => ({\n  type: 'SET_PLAYBACK',\n  newIsPlaying\n})\n\nexport const dragStart = () => ({\n  type: 'DRAG_START'\n})\n\nexport const dragStop = () => ({\n  type: 'DRAG_STOP'\n})\n\nexport const graphUpdate = () => ({\n  type: 'GRAPH_UPDATE'\n})\n\nexport const fftUpdate = (frequencyData) => ({\n  type: 'FFT_UPDATE',\n  frequencyData\n})\n\nexport const boxDrag = dragData => ({\n  type: 'BOX_DRAG',\n  dragData\n})\n\nexport const boxResize = payload => ({\n  type: 'BOX_RESIZE',\n  payload\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {Rnd} from 'react-rnd';\nimport ResizableRect from 'react-resizable-rotatable-draggable';\nimport {withSize} from 'react-sizeme';\nimport * as R from 'ramda';\n\nimport {boxAdjustment, boxAdjustmentStart, boxAdjustmentStop} from '../actions';\nimport {range, mapBetweenRanges, clampToRange, rangeDistance} from '../utils';\n\n\nconst resizeHandleStyles = { \n  width: 20, \n  height: 20,\n  background: '#ddd',\n};\n\nconst AdjustableBoxFor4Params = (props) => {\n  const { \n    xParam, yParam, widthParam, heightParam, parentSize, zIndex,\n    paramSetName, boxBeingAdjusted,\n    onDrag, onResize, onBoxAdjustmentStart, onBoxAdjustmentStop\n  } = props;\n\n  const centerX = mapBetweenRanges(\n    xParam.range, \n    range(0, parentSize.width), \n    xParam.value\n  );\n  const centerY = mapBetweenRanges(\n    yParam.range, \n    range(0, parentSize.height), \n    yParam.value\n  );\n  const width = mapBetweenRanges(\n    widthParam.range, \n    range(0, parentSize.width), \n    widthParam.value\n  );\n  const height = mapBetweenRanges(\n    heightParam.range,\n    range(0, parentSize.height),\n    heightParam.value\n  );\n\n  return (\n    <Rnd\n    position={{\n      x: centerX - width * 0.5,\n      y: centerY - height * 0.5\n    }}\n    size={{\n      width: width,\n      height: height\n    }}\n\n    bounds={'parent'}\n\n    maxWidth={ parentSize.width * 0.5 }\n    maxHeight={ parentSize.height }\n    minWidth={60}\n    minHeight={60}\n\n    style={{\n      border: '5px solid #ddd',\n      background: boxBeingAdjusted === 'ME' ? 'rgba(0,0,0,0)' : props.color,\n      opacity: boxBeingAdjusted === 'SOMEONE_ELSE' ? 0 : 1,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      boxShadow: '10px 10px 20px 2px rgba(0,0,0,0.2)',\n      zIndex: zIndex,\n    }}\n    \n    onDrag={onDrag(parentSize, xParam, yParam)}\n    onResize={onResize(parentSize, widthParam, heightParam)}\n\n    onDragStart={onBoxAdjustmentStart(paramSetName)}\n    onDragStop={onBoxAdjustmentStop(paramSetName)}\n    onResizeStart={onBoxAdjustmentStart(paramSetName)}\n    onResizeStop={onBoxAdjustmentStop(paramSetName)}\n    \n    enableResizing={{\n      topLeft: true,\n      topRight: true,\n      bottomLeft: true,\n      bottomRight: true\n    }}\n\n    resizeHandleStyles={{\n      topLeft: resizeHandleStyles,\n      topRight: resizeHandleStyles,\n      bottomLeft: resizeHandleStyles,\n      bottomRight: resizeHandleStyles,\n    }}\n    >\n    </Rnd>\n  );\n};\n\nAdjustableBoxFor4Params.propTypes = {\n  xParam: PropTypes.object.isRequired,\n  yParam: PropTypes.object.isRequired,\n  widthParam: PropTypes.object.isRequired,\n  heightParam: PropTypes.object.isRequired,\n  parentSize: PropTypes.object.isRequired,\n  onDrag: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const cpsba = state.timbreParams.currentParamSetBeingAdjusted;\n  let boxBeingAdjusted = null;\n  if (cpsba === ownProps.paramSetName) {\n    boxBeingAdjusted = 'ME';\n  } \n  else if (cpsba !== null) {\n    boxBeingAdjusted = 'SOMEONE_ELSE';\n  }\n\n  return {\n    boxBeingAdjusted: boxBeingAdjusted\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDrag: (containerSize, xParam, yParam) => (\n    (mouseEvent, dragData) => {\n      const compressedDeltaX = mapBetweenRanges(\n        range(0, containerSize.width), \n        range(0, rangeDistance(xParam.range)), \n        dragData.deltaX\n      );\n      const compressedDeltaY = mapBetweenRanges(\n        range(0, containerSize.height), \n        range(0, rangeDistance(yParam.range)), \n        dragData.deltaY\n      );\n\n      return dispatch(boxAdjustment([\n        { ...xParam, value: xParam.value + compressedDeltaX },\n        { ...yParam, value: yParam.value + compressedDeltaY }\n      ]));\n    }\n  ),\n  onResize: (containerSize, widthParam, heightParam) => (\n    (event, directionType, refToElement, delta, position) => {\n      const widthParamNewValue = mapBetweenRanges(\n        range(0, containerSize.width),\n        widthParam.range,\n        refToElement.clientWidth\n      );\n      const heightParamNewValue = mapBetweenRanges(\n        range(0, containerSize.height),\n        heightParam.range,\n        refToElement.clientHeight\n      );\n\n      return dispatch(boxAdjustment([\n        { ...widthParam, value: widthParamNewValue },\n        { ...heightParam, value: heightParamNewValue }\n      ]));\n    }\n  ),\n  onBoxAdjustmentStart: (paramSetName) => {\n    return () => dispatch(boxAdjustmentStart(paramSetName));\n  },\n  onBoxAdjustmentStop: (paramSetName) => {\n    return () => dispatch(boxAdjustmentStop(paramSetName));\n  }\n});\n\nconst AdjustableBoxFor4ParamsWithSize = withSize({ monitorHeight: true })(AdjustableBoxFor4Params);\nexport default connect(mapStateToProps, mapDispatchToProps)(AdjustableBoxFor4ParamsWithSize);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport { sine } from '../utils';\n\n\n\nclass Visualizer extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n  }\n\n  render() {\n\n    return (\n      <canvas \n      width={this.props.parentSize.width} \n      height={this.props.parentSize.height}\n      ref={this.canvas} \n      />\n    );\n  }\n\n  draw() {\n    const { overtones, isPlaying, colors } = this.props;\n    const canvas = this.canvas.current;\n    const context = canvas.getContext('2d');\n\n    const xPaddingUnits = 2;\n    const sliceWidth = canvas.width / (overtones.length + (xPaddingUnits * 2));\n    const maxHeight = canvas.height * 0.5;\n    const maxRadius = canvas.width * 0.05;\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (! isPlaying) {\n      return;\n    }\n    \n    overtones.map(( overtone, index ) => {\n      const { overtoneAmplitude, modulationMagnitude, modulationFrequency } = overtone;\n      const x = (index + xPaddingUnits + 0.5) * sliceWidth;\n      const y = overtoneAmplitude * maxHeight + (maxHeight * 0.5);\n\n      // draw the modulation magnitude line\n      context.lineWidth = 4;\n      context.strokeStyle = colors.modulationMagnitudes;\n      context.beginPath();\n      // line height based on modulation magnitude\n      const lineHeight = modulationMagnitude * maxHeight;\n      context.moveTo(x, y - lineHeight * 0.5);\n      context.lineTo(x, y + lineHeight * 0.5);\n      context.stroke();\n\n      // draw the overtone overtoneAmplitude \n      context.lineWidth = 4;\n      context.fillStyle = colors.overtoneAmplitudes;\n      context.beginPath();\n      context.arc(x, y, 8, 2 * Math.PI, false);\n      context.fill();\n      \n      // draw the modulation frequency circle\n      context.strokeStyle = colors.modulationFrequencies;\n      context.lineWidth = 4;\n      context.beginPath();\n      // bigger radius for slower modulation frequency\n      const radius = Math.max((1 - modulationFrequency) * maxRadius, 0);\n      context.arc(x, y, radius, 2 * Math.PI, false);\n      context.stroke();\n      \n\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n}\n\nconst computeOvertones = (state) => (\n  R.range(1, state.settings.synth.toneCount + 1).map( i => ({\n    overtoneAmplitude: sine(state.timbreParams.overtoneAmplitudesCurve, i),\n    modulationMagnitude: sine(state.timbreParams.modulationMagnitudesCurve, i),\n    modulationFrequency: sine(state.timbreParams.modulationFrequenciesCurve, i)\n  }))\n);\n\nconst mapStateToProps = (state) => ({\n  overtones: computeOvertones(state),\n  isPlaying: state.audioPlayer.isPlaying,\n  colors: state.settings.colors\n});\n\nexport default connect(mapStateToProps)(Visualizer);","import * as R from 'ramda';\nimport {Cmd, loop} from 'redux-loop';\n// import updateGraph from '../synth.js';\nimport {graphUpdate} from '../actions';\nimport {range, mapBetweenRanges} from '../utils';\n\n\n\nexport const settings = {\n  overtoneAmplitudesCurve: {\n    ranges: {\n      phase: range(0, 18),\n      offset: range(0, 1),\n      period: range(2, 20),\n      amp: range(0, 1)\n    }\n  },\n  modulationMagnitudesCurve: {\n    ranges: {\n      phase: range(0, 18),\n      offset: range(0, 1),\n      period: range(2, 20),\n      amp: range(0, 1)\n    }\n  },\n  modulationFrequenciesCurve: {\n    ranges: {\n      phase: range(0, 18),\n      offset: range(0, 1),\n      period: range(2, 20),\n      amp: range(0, 1)\n    }\n  }\n};\n\nconst genRandomCurve = (ranges) => {\n  const mapFrom01To = (r, n) => mapBetweenRanges(range(0, 1), r, n);\n  const randomInRange = (min, max) => (\n    mapFrom01To(range(min, max), Math.random())\n  );\n  return {\n    phase: mapFrom01To(ranges.phase, randomInRange(0.25, 0.75)),\n    offset: mapFrom01To(ranges.offset, randomInRange(0.4, 0.6)),\n    period: mapFrom01To(ranges.period, randomInRange(0.1, 0.4)),\n    amp: mapFrom01To(ranges.amp, randomInRange(0.3, 0.8))\n  };\n};\n\nexport const initialState = {\n  overtoneAmplitudesCurve: genRandomCurve(settings.overtoneAmplitudesCurve.ranges),\n  modulationMagnitudesCurve: genRandomCurve(settings.modulationMagnitudesCurve.ranges),\n  modulationFrequenciesCurve: genRandomCurve(settings.modulationFrequenciesCurve.ranges),\n  currentParamSetBeingAdjusted: null\n};\n\n\nexport const timbreParams = (state = initialState, action) => {\n  // debugger;\n  switch(action.type) {\n    case 'BOX_ADJUSTMENT':\n\n      // overwrites the old value at lensPath with new value\n      const updateParam = ({value, lensPath}) => (\n        R.curry(R.set(R.lensPath(lensPath), value))\n      );\n\n      // a list of update functions, one for each param\n      const updaterFuncs = R.map(updateParam, action.params);\n\n      // pipe the state through each of the update functions\n      const newState = R.reduce(R.applyTo, state, updaterFuncs);\n\n      // return new state and a command to dispatch the GRAPH_UPDATE action\n      return loop(\n        newState,\n        Cmd.action(graphUpdate())\n      );\n\n    case 'BOX_ADJUSTMENT_START':\n      return {\n        ...state,\n        currentParamSetBeingAdjusted: action.paramSetName\n      }\n\n    case 'BOX_ADJUSTMENT_STOP':\n      return {\n        ...state,\n        currentParamSetBeingAdjusted: null\n      }\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {withSize} from 'react-sizeme';\nimport * as R from 'ramda';\n\n\nimport AdjustableBoxFor4Params from './AdjustableBoxFor4Params';\nimport Visualizer from '../containers/Visualizer';\nimport {range, mapBetweenRanges} from '../utils';\n\n// TODO inject settings into state instead of doing thing\nimport {settings} from '../reducers/timbreParams';\n\n\n\nconst boxArea = ({width, height}) => {\n  const w = mapBetweenRanges(width.range, range(0,1), width.value);\n  const h = mapBetweenRanges(height.range, range(0,1), height.value);\n  return w * h;\n};\n\nconst computeZIndex = (listOfParamsBoxes, paramsBox) => (\n  R.reverse(R.sortBy(boxArea, listOfParamsBoxes)).indexOf(paramsBox)\n);\n\nconst ControlPad = (props) => {\n  const { \n    overtoneAmplitudesBox, modulationMagnitudesBox, modulationFrequenciesBox \n  } = props;\n  const paramsList = [\n    overtoneAmplitudesBox, modulationMagnitudesBox, modulationFrequenciesBox\n  ];\n\n  return (\n    <div\n    style={{\n      width: '100%',\n      height: '100%',\n      borderColor: 'white',\n      borderStyle: 'dashed',\n      borderWidth: props.isAdjustmentHappening ? '0px' : '0px'\n      // background: 'rgba(255, 255, 255, 0.05)'\n    }}\n    >\n    \n        <AdjustableBoxFor4Params \n        parentSize={props.size}\n        xParam={props.overtoneAmplitudesBox.x}\n        yParam={props.overtoneAmplitudesBox.y}\n        widthParam={props.overtoneAmplitudesBox.width}\n        heightParam={props.overtoneAmplitudesBox.height}\n        zIndex={computeZIndex(paramsList, overtoneAmplitudesBox)}\n        color={props.colors.overtoneAmplitudes}\n        paramSetName={'overtoneAmplitudes'}\n        >\n        </AdjustableBoxFor4Params>\n\n        <AdjustableBoxFor4Params \n        parentSize={props.size}\n        xParam={props.modulationMagnitudesBox.x}\n        yParam={props.modulationMagnitudesBox.y}\n        widthParam={props.modulationMagnitudesBox.width}\n        heightParam={props.modulationMagnitudesBox.height}\n        color={props.colors.modulationMagnitudes}\n        paramSetName={'modulationMagnitudes'}\n        zIndex={computeZIndex(paramsList, modulationMagnitudesBox)}\n        >\n        </AdjustableBoxFor4Params>\n\n        <AdjustableBoxFor4Params \n        parentSize={props.size}\n        xParam={props.modulationFrequenciesBox.x}\n        yParam={props.modulationFrequenciesBox.y}\n        widthParam={props.modulationFrequenciesBox.width}\n        heightParam={props.modulationFrequenciesBox.height}\n        color={props.colors.modulationFrequencies}\n        paramSetName={'modulationFrequencies'}\n        zIndex={computeZIndex(paramsList, modulationFrequenciesBox)}\n        >\n        </AdjustableBoxFor4Params>\n    </div>\n  );\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n\n  const makeParams = (curve, curveSettings, curveKeyName) => ({\n    x: { \n      value: curve.phase,\n      range: curveSettings.ranges.phase,\n      lensPath: [ curveKeyName, 'phase' ]\n    },\n    y: {\n      value: curve.offset,\n      range: curveSettings.ranges.offset,\n      lensPath: [ curveKeyName, 'offset' ]\n    },\n    width: {\n      value: curve.period,\n      range: curveSettings.ranges.period,\n      lensPath: [ curveKeyName, 'period' ]\n    },\n    height: {\n      value: curve.amp,\n      range: curveSettings.ranges.amp,\n      lensPath: [ curveKeyName, 'amp' ]\n    }\n  });\n\n  return {\n    overtoneAmplitudesBox: makeParams(\n      state.timbreParams.overtoneAmplitudesCurve, \n      settings.overtoneAmplitudesCurve, \n      'overtoneAmplitudesCurve'\n    ),\n    modulationMagnitudesBox: makeParams(\n      state.timbreParams.modulationMagnitudesCurve, \n      settings.modulationMagnitudesCurve, \n      'modulationMagnitudesCurve'\n    ),\n    modulationFrequenciesBox: makeParams(\n      state.timbreParams.modulationFrequenciesCurve, \n      settings.modulationFrequenciesCurve, \n      'modulationFrequenciesCurve'\n    ),\n    colors: state.settings.colors,\n    isAdjustmentHappening: state.timbreParams.currentParamSetBeingAdjusted !== null\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => (\n    {}\n);\n\nconst ControlPadWithSize = withSize({ monitorHeight: true })(ControlPad);\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlPadWithSize);","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {withSize} from 'react-sizeme';\n\nimport ControlPad from './ControlPad';\nimport Visualizer from './Visualizer';\n\n\nconst ParambreContainer = (props) => (\n  <div\n  style={{ \n    width: '100%',\n    height: '100vh',\n    background: '#111'\n  }}\n  >\n    \n    <Visualizer parentSize={props.size} />\n\n    <div\n    style={{\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 10\n    }}\n    >\n      <ControlPad />\n    </div>\n\n  </div>\n);\n\nconst ParambreContainerWithSize = withSize({ monitorHeight: true })(ParambreContainer);\nexport default connect()(ParambreContainerWithSize);","import React from 'react';\nimport {withSize} from 'react-sizeme';\nimport ParambreContainer from '../containers/ParambreContainer';\n\nconst App = () => (\n  <div>\n    <ParambreContainer />\n  </div>\n);\n\nexport default App;\n","import createVirtualAudioGraph, {\n  createNode,\n  createWorkletNode,\n  delay,\n  gain,\n  oscillator,\n  stereoPanner,\n} from 'virtual-audio-graph';\nimport { Cmd, loop } from 'redux-loop'; \nimport audioContext from '../audioContext';\nimport * as Actions from '../actions';\n\n\nconst audioGraph = createVirtualAudioGraph({\n  audioContext,\n  output: audioContext.destination\n});\n\n// HACK\n// to make sure the first initial trigger fades in from volume 0.\n// Better would be dispatching a GRAPH_UPDATE Cmd when the app loads,\n// but doing so was causing audioGraph.currentTime to malfunction.\naudioGraph.update({\n  0: gain('output', { gain: 0 })\n});\n\nexport const initialState = {\n  isPlaying: false,\n  mostRecentPlayPauseChange: 0,\n  audioGraph: audioGraph\n}\n\nexport const audioPlayer = (state = initialState, action) => {\n  const setIsPlaying = (newIsPlaying) => {\n    const newState = {\n      ...state,\n      isPlaying: newIsPlaying,\n      mostRecentPlayPauseChange: state.audioGraph.currentTime\n    };\n    return loop(\n      newState, \n      Cmd.action(Actions.graphUpdate())\n    );\n  };\n\n  switch(action.type) {\n    case 'TOGGLE_PLAYBACK':\n      return setIsPlaying(!state.isPlaying);\n    case 'BOX_ADJUSTMENT_START':\n      return setIsPlaying(true);\n    case 'BOX_ADJUSTMENT_STOP':\n      return setIsPlaying(false);\n    default:\n      return state;\n  }\n};\n","\nexport const initialState = new Uint8Array();\n\nexport const frequencyData = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FFT_UPDATE':\n      return action.frequencyData;\n    default:\n      return state;\n  }\n};\n","\nimport { combineReducers, Cmd, loop } from 'redux-loop';\nimport * as AP from './audioPlayer';\nimport * as TP from './timbreParams';\nimport * as FD from './frequencyData';\nimport updateGaph from '../synth';\n\n\nexport const initialState = {\n  timbreParams: TP.initialState,\n  audioPlayer: AP.initialState,\n  frequencyData: FD.initialState,\n  settings: {\n    ...(TP.settings),\n    colors: {\n      overtoneAmplitudes: '#f50',\n      modulationMagnitudes: '#309',\n      modulationFrequencies: '#737'\n    },\n    synth: {\n      attack: 0.5,\n      release: 3,\n      toneCount: 16,\n      rootFrequency: 180,\n      chord: [ 1, 9/5, 12/5, 16/3 ]\n    }\n  }\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'GRAPH_UPDATE':\n      return loop(state, Cmd.run(() => updateGaph(state)));\n\n    default:\n      const comboReducer = combineReducers({\n        timbreParams: TP.timbreParams,\n        audioPlayer: AP.audioPlayer,\n        frequencyData: FD.frequencyData\n      });\n      const newStateAndCmd = comboReducer(state, action);\n      return newStateAndCmd\n  }\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { ReduxEmitter } from 'kuker-emitters';\nimport * as Loop from 'redux-loop';\nimport * as R from 'ramda';\n\n\nimport createVirtualAudioGraph, {\n  createNode,\n  createWorkletNode,\n  delay,\n  gain,\n  oscillator,\n  stereoPanner,\n} from 'virtual-audio-graph';\n\nimport audioContext from './audioContext';\nimport updateGraph from './synth';\nimport App from './components/App';\nimport {rootReducer, initialState} from './reducers';\n\n\nconst enhancer = compose(\n  applyMiddleware(ReduxEmitter()),\n  Loop.install(),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n)\n\nconst store = createStore(rootReducer, initialState, enhancer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\nstore.subscribe(() => {\n  const state = store.getState();\n  // console.log(state.audioPlayer.isPlaying);\n});\n\n\n\n\n// function updateFFT(timestamp) {\n//   requestAnimationFrame(updateFFT);\n\n//   // console.log(timestamp);\n//   // extract fft data\n//   const state = store.getState();\n//   const analyzerNode = state.audioPlayer.audioGraph.getAudioNodeById(1000);\n//   if (analyzerNode !== undefined) {\n//     let dataArray = new Uint8Array(analyzerNode.frequencyBinCount);\n//     analyzerNode.getByteFrequencyData(dataArray);\n\n//     // dispatch to the store  \n//     store.dispatch(fftUpdate(dataArray))\n//   }\n// };\n\n// updateFFT();"],"sourceRoot":""}